[{"/home/lucas/Odin/react/memory-game/src/App.js":"1","/home/lucas/Odin/react/memory-game/src/index.js":"2","/home/lucas/Odin/react/memory-game/src/components/board.js":"3","/home/lucas/Odin/react/memory-game/src/components/card.js":"4","/home/lucas/Odin/react/memory-game/src/components/game.js":"5"},{"size":181,"mtime":1606567270420,"results":"6","hashOfConfig":"7"},{"size":198,"mtime":1606248288911,"results":"8","hashOfConfig":"7"},{"size":2480,"mtime":1606567047212,"results":"9","hashOfConfig":"7"},{"size":377,"mtime":1606477283772,"results":"10","hashOfConfig":"7"},{"size":934,"mtime":1606479578759,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k6c5og",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/home/lucas/Odin/react/memory-game/src/App.js",[],"/home/lucas/Odin/react/memory-game/src/index.js",[],"/home/lucas/Odin/react/memory-game/src/components/board.js",["23"],"/home/lucas/Odin/react/memory-game/src/components/card.js",[],"/home/lucas/Odin/react/memory-game/src/components/game.js",["24"],"import React, { useState, useEffect } from 'react';\nimport '../App.scss';\nimport Board from './board'\n\nconst Game = () => {\n\n    const [score, setScore] = useState(0)\n    const [highScore, setHighScore] = useState(0)\n    const [selected, setSelected] = useState([]);\n\n    const gameLogic = (cardName) => {\n\n        if(!selected.includes(cardName)){\n            selected.push(cardName)\n            setScore(score+1)\n            if(highScore <= score) {\n                setHighScore(highScore+1)\n            }\n        } else {\n            setSelected([])\n            setScore(0)\n            alert('Perdiste, loser!')\n        }\n        console.log(selected)\n    }\n\n    if(score === 12) {\n        alert('ganaste!!! waju!!!')\n        setSelected([])\n        setScore(0)\n    }\n\n\n\n    return (\n        <div>\n            < Board score={score} highScore={highScore} gameLogic={gameLogic}/>\n        </div>\n        )\n    }\n  \nexport default Game",{"ruleId":"25","severity":1,"message":"26","line":86,"column":8,"nodeType":"27","endLine":86,"endColumn":26,"suggestions":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":27,"nodeType":"31","messageId":"32","endLine":1,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cards'. Either include it or remove the dependency array.","ArrayExpression",["33"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",{"desc":"34","fix":"35"},"Update the dependencies array to be: [score, highScore, cards]",{"range":"36","text":"37"},[1989,2007],"[score, highScore, cards]"]