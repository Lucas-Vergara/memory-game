{"version":3,"sources":["components/card.js","images/bass.png","images/bongo.png","images/clarinet.png","images/conga.png","images/guitar.png","images/harp.png","images/maracas.png","images/medieval.png","images/organ.png","images/sax.png","images/sitar.png","images/violin.png","components/board.js","components/game.js","App.js","index.js"],"names":["Card","props","src","name","halp","gameLogic","id","className","alt","onClick","bind","Board","score","highScore","images","bass","bongo","clarinet","conga","guitar","harp","maracas","medieval","organ","sax","sitar","violin","useState","cards","setNewCards","useEffect","newCards","i","length","randomIdx","Math","floor","random","shuffle","map","card","Game","setScore","setHighScore","selected","setSelected","alert","cardName","includes","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAceA,EAZF,SAACC,GAAW,IAAD,EACiB,CAACA,EAAMC,IAAKD,EAAME,KAAMF,EAAMG,KAAMH,EAAMI,WAAxEH,EADa,KACRC,EADQ,KACFC,EADE,KACIC,EADJ,KAEpB,OACI,8BACI,qBAAKC,GAAG,OAAR,SACI,qBAAKJ,IAAKA,EAAKK,UAAU,QAAQC,IAAKL,EAAiBM,QAASJ,EAAUK,K,UAAWP,IAApCC,QCPlD,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,oCCA1B,MAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,mCC2G1BO,MA1Ff,SAAgBV,GAAQ,IAEbW,EAA+BX,EAA/BW,MAAOC,EAAwBZ,EAAxBY,UAAWR,EAAaJ,EAAbI,UAEnBS,EAAS,CACX,CACIZ,IAAKa,EACLZ,KAAM,QAEV,CACID,IAAKc,EACLb,KAAM,SAEV,CACID,IAAKe,EACLd,KAAM,YAEV,CACID,IAAKgB,EACLf,KAAM,SAEV,CACID,IAAKiB,EACLhB,KAAM,UAEV,CACID,IAAKkB,EACLjB,KAAM,QAEV,CACID,IAAKmB,EACLlB,KAAM,WAEV,CACID,IAAKoB,EACLnB,KAAM,YAEV,CACID,IAAKqB,EACLpB,KAAM,SAEV,CACID,IAAKsB,EACLrB,KAAM,OAEV,CACID,IAAKuB,EACLtB,KAAM,SAEV,CACID,IAAKwB,EACLvB,KAAM,WAnDK,EAuDUwB,mBAASb,GAvDnB,mBAuDZc,EAvDY,KAuDLC,EAvDK,KAuEnB,OAPAC,qBAAU,WACN,IAAMC,EAAQ,YAAOH,IART,SAACG,GACb,IAAK,IAAIC,EAAID,EAASE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC1C,IAAIE,EAAYC,KAAKC,MAAMD,KAAKE,SAAWL,GADD,EAEL,CAACD,EAASC,GAAID,EAASG,IAA3DH,EAASG,GAFgC,KAEpBH,EAASC,GAFW,MAQ9CM,CAAQP,GACRF,EAAYE,KAEb,CAACnB,EAAOC,IAGP,gCACQ,sBAAKP,GAAG,aAAR,UACI,4CAAeM,EAAf,OACA,gDAAmBC,EAAnB,UAEJ,qBAAKP,GAAG,YAAR,SACKsB,EAAMW,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAAMtC,IAAKsC,EAAKtC,IAAKC,KAAMqC,EAAKrC,KAAsBE,UAAWA,GAAtBmC,EAAKrC,eCxDrDsC,EApCF,WAAO,IAAD,EAEWd,mBAAS,GAFpB,mBAERf,EAFQ,KAED8B,EAFC,OAGmBf,mBAAS,GAH5B,mBAGRd,EAHQ,KAGG8B,EAHH,OAIiBhB,mBAAS,IAJ1B,mBAIRiB,EAJQ,KAIEC,EAJF,KA6Bf,OARa,KAAVjC,IACCkC,MAAM,4BACND,EAAY,IACZH,EAAS,IAMT,8BACI,cAAE,EAAF,CAAQ9B,MAAOA,EAAOC,UAAWA,EAAWR,UAzBlC,SAAC0C,GAEXH,EAASI,SAASD,IAOlBF,EAAY,IACZH,EAAS,GACTI,MAAM,2CARNF,EAASK,KAAKF,GACdL,EAAS9B,EAAM,GACZC,GAAaD,GACZ+B,EAAa9B,EAAU,UCFxBqC,EAVH,WAGV,OACE,8BACE,cAAE,EAAF,OCLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5ef4f512.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n    const [src, name, halp, gameLogic] = [props.src, props.name, props.halp, props.gameLogic]\n    return (\n        <div>\n            <div id=\"card\">\n                <img src={src} className='image' alt={name} key={halp} onClick={gameLogic.bind(this, name)} />\n            </div>\n        </div>\n    )\n}\n\n\nexport default Card","export default __webpack_public_path__ + \"static/media/bass.176373bc.png\";","export default __webpack_public_path__ + \"static/media/bongo.34778f1f.png\";","export default __webpack_public_path__ + \"static/media/clarinet.67a666bb.png\";","export default __webpack_public_path__ + \"static/media/conga.56c0df51.png\";","export default __webpack_public_path__ + \"static/media/guitar.af16ca87.png\";","export default __webpack_public_path__ + \"static/media/harp.b9c75a8f.png\";","export default __webpack_public_path__ + \"static/media/maracas.762c5e46.png\";","export default __webpack_public_path__ + \"static/media/medieval.b09fcd54.png\";","export default __webpack_public_path__ + \"static/media/organ.6918d234.png\";","export default __webpack_public_path__ + \"static/media/sax.4c795aa0.png\";","export default __webpack_public_path__ + \"static/media/sitar.baad41b8.png\";","export default __webpack_public_path__ + \"static/media/violin.10e4b443.png\";","import React, { useEffect, useState } from 'react';\nimport '../App.scss';\nimport Card from './card'\nimport bass from '../images/bass.png'\nimport  bongo from '../images/bongo.png'\nimport clarinet from '../images/clarinet.png'\nimport conga from '../images/conga.png'\nimport guitar from '../images/guitar.png'\nimport harp from '../images/harp.png'\nimport maracas from '../images/maracas.png'\nimport medieval from '../images/medieval.png'\nimport organ from '../images/organ.png'\nimport sax from '../images/sax.png'\nimport sitar from '../images/sitar.png'\nimport violin from '../images/violin.png'\n\n\nfunction Board (props) {\n\n    const {score, highScore, gameLogic} = props\n\n    const images = [\n        {\n            src: bass,\n            name: 'bass'\n        },\n        {\n            src: bongo,\n            name: 'bongo'\n        },\n        {\n            src: clarinet,\n            name: 'clarinet'\n        },\n        {\n            src: conga,\n            name: 'conga'\n        },\n        {\n            src: guitar,\n            name: 'guitar'\n        },\n        {\n            src: harp,\n            name: 'harp'\n        },\n        {\n            src: maracas,\n            name: 'maracas'\n        },\n        {\n            src: medieval,\n            name: 'medieval'\n        },\n        {\n            src: organ,\n            name: 'organ'\n        },\n        {\n            src: sax,\n            name: 'sax'\n        },\n        {\n            src: sitar,\n            name: 'sitar'\n        },\n        {\n            src: violin,\n            name: 'violin'\n        },\n    ]\n\n    const [cards, setNewCards] = useState(images);\n\n    const shuffle = (newCards) => {\n        for (let i = newCards.length - 1; i > 0; i--) {\n            let randomIdx = Math.floor(Math.random() * i);\n            [newCards[randomIdx], newCards[i]] = [newCards[i], newCards[randomIdx]];\n        }\n    };\n\n    useEffect(()=> {\n        const newCards = [...cards];\n        shuffle(newCards)\n        setNewCards(newCards)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [score, highScore])\n\n    return (\n        <div>\n                <div id='scoreboard'>\n                    <span> Score: {score} </span>\n                    <span> Highscore: {highScore} </span>\n                </div>\n                <div id=\"gameboard\">\n                    {cards.map((card) => (\n                    <Card src={card.src} name={card.name} key={card.name} gameLogic={gameLogic} />\n                    ))}\n                </div>\n\n        </div>\n    )\n\n\n}\n\n\nexport default Board","import React, { useState} from 'react';\nimport '../App.scss';\nimport Board from './board'\n\nconst Game = () => {\n\n    const [score, setScore] = useState(0)\n    const [highScore, setHighScore] = useState(0)\n    const [selected, setSelected] = useState([]);\n\n    const gameLogic = (cardName) => {\n\n        if(!selected.includes(cardName)){\n            selected.push(cardName)\n            setScore(score+1)\n            if(highScore <= score) {\n                setHighScore(highScore+1)\n            }\n        } else {\n            setSelected([])\n            setScore(0)\n            alert('Oops, you lose. Better luck next time')\n        }\n    }\n\n    if(score === 12) {\n        alert('You win! Congratulation!')\n        setSelected([])\n        setScore(0)\n    }\n\n\n\n    return (\n        <div>\n            < Board score={score} highScore={highScore} gameLogic={gameLogic}/>\n        </div>\n        )\n    }\n  \nexport default Game","import React from 'react';\nimport './App.scss';\nimport Game from './components/game'\n\nconst App = () => {\n\n\n  return (\n    <div>\n      < Game />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}